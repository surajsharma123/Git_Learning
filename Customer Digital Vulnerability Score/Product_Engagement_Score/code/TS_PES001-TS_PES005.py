import unittest 
import random
import numpy as np
import pandas as pd
from pandas import Series, DataFrame
import cx_Oracle
import sqlalchemy as sa
from sqlalchemy import create_engine

def get_data(entity_id,score_id):
    conn = cx_Oracle.connect('ifrm_uds/SquareOne123@10.0.0.180:1521/ORCL.ap-south-1.compute.internal')
    cursor = conn.cursor()
    Select_Query1 = "select SCORE_VALUE from entity_score where ENTITY_ID = '{0}' and SCORE_ID={1}".format(entity_id,score_id) 
    print(Select_Query1)
    cursor.execute(Select_Query1)
    ret = pd.DataFrame(cursor.fetchall())
    score_value = ret.iloc[0,0]
   # print("score_value:", score_value)
    return(score_value)

class TestMethod(unittest.TestCase):
    def test_TS_CDS013(self):
        score_value = get_data('6636234093',103)
        self.assertEquals(score_value,0.67)
    def test_TS_CDS014(self):
        score_value = get_data('1462781444',103)
        self.assertEquals(score_value,0.21)
    def test_TS_CDS015(self):
        score_value = get_data('5911684492',103)
        self.assertEquals(score_value,0.88)
    def test_TS_CDS016(self):
        score_value = get_data('3911273280',103)
        self.assertEquals(score_value,0.98)
    def test_TS_CDS017(self):
        score_value = get_data('7490208288',103)
        self.assertEquals(score_value,0.55)
    def test_TS_CDS018(self):
        score_value = get_data('8035547446',103)
        self.assertEquals(score_value,0.41)
    def test_TS_CDS019(self):
        score_value = get_data('4027691479',103)
        self.assertEquals(score_value,0.78)
    def test_TS_CDS020(self):
        score_value = get_data('4878540332',103)
        self.assertEquals(score_value,0.21)
    def test_TS_CDS021(self):
        score_value = get_data('2448508695',103)
        self.assertEquals(score_value,0.21)
    def test_TS_CDS021(self):
        score_value = get_data('3109889019',103)
        self.assertEquals(score_value,0.21)
    def test_TS_CDS021(self):
        score_value = get_data('3257875198',103)
        self.assertEquals(score_value,0.7)
    def test_TS_CDS021(self):
        score_value = get_data('3885769455',103)
        self.assertEquals(score_value,50)
    def test_TS_CDS021(self):
        score_value = get_data('7098801313',103)
        self.assertEquals(score_value,75)
    def test_TS_CDS021(self):
        score_value = get_data('6044872544',103)
        self.assertEquals(score_value,75)
    def test_TS_CDS021(self):
        score_value = get_data('8659036746',103)
        self.assertEquals(score_value,100)
if __name__=='__main__':
     unittest.main()
